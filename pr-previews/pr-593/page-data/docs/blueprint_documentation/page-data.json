{"componentChunkName":"component---src-templates-doc-js","path":"/docs/blueprint_documentation","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Extending/Adopting the Theia IDE"},"html":"<h1 id=\"extendingadopting-the-theia-ide\" style=\"position:relative;\"><a href=\"#extendingadopting-the-theia-ide\" aria-label=\"extendingadopting the theia ide permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Extending/Adopting the Theia IDE</h1>\n<p>This guide provides an overview on how to extend and customize the Theia IDE to your own custom IDE or tool. In this scenario, the Eclipse Theia IDE is an example product used as a reference on how to build desktop IDE-like products based on the Eclipse Theia framework. If you just want to use the Theia IDE, see the <a href=\"/theia-website-previews/pr-previews/pr-593/docs/user_getting_started\">user guide</a></p>\n<p>Please note that adopting the Theia IDE as a basis is just one of several ways to get started with building a Theia-based application. We recommend reading the article \"<a href=\"/theia-website-previews/pr-previews/pr-593/docs/composing_applications\">Build your own IDE/Tool</a>\" as a first step. Furthermore, this guide is focused on building a desktop app. We also provide an <a href=\"https://github.com/eclipse-theia/theia-blueprint?tab=readme-ov-file#docker-build\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">experimental Docker version</a> of the Theia IDE as an alternative.</p>\n<p>The Theia IDE assembles a selected subset of existing Theia features and extensions.\nWe provide installers for the Theia IDE to be downloaded (see links below).\nIn the <a href=\"https://github.com/eclipse-theia/theia-blueprint\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">respective git repository</a> you can also find the <a href=\"https://github.com/eclipse-theia/theia-blueprint\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">source code for the Theia IDE and its installers</a>.</p>\n<p>This documentation will use these sources as a template. We will explain\nhow to customize this template so that you can build your own custom Theia-based product including installers and packaging for installing the desktop-based version of your custom product on all major operating systems. Please note that the technical name (e.g. in the source code) for the Theia IDE is \"Theia Blueprint\" to avoid confusion with the generic term \"IDE\".</p>\n<ul>\n<li><a href=\"#building-a-product-and-installers\">Building a product and installers</a></li>\n<li><a href=\"#signing\">Signing</a></li>\n<li><a href=\"#addingremoving-features\">Adding/removing Features</a></li>\n<li><a href=\"#updating-bundled-vs-code-extensions\">Updating Bundled VS Code Extensions</a></li>\n<li><a href=\"#customizing-theia-extensions\">Customizing Theia Extensions</a></li>\n<li><a href=\"#branding\">Branding</a></li>\n<li><a href=\"#configure-publish-and-update\">Configure Publish and Update</a></li>\n</ul>\n<h2 id=\"building-a-product-and-installers\" style=\"position:relative;\"><a href=\"#building-a-product-and-installers\" aria-label=\"building a product and installers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Building a product and installers</h2>\n<p>The Theia IDE build uses <a href=\"https://www.electron.build/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">electron-builder</a> to package the product as a desktop application.</p>\n<p>The product can be built and packaged with <a href=\"https://yarnpkg.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">yarn</a>.\nNote that you usually can only package the product for the operating system you execute the build on.\nFor more information see the <a href=\"https://www.electron.build/multi-platform-build\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">electron-builder documentation on multi-platform builds</a>.</p>\n<p>The following commands may be run from the root directory of the repository.</p>\n<p>To install dependencies and build the application, simply execute <code class=\"language-text\">yarn</code>.</p>\n<p>You can also directly run the unpackaged application, e.g. to test it during development with <code class=\"language-text\">yarn electron start</code>.</p>\n<p>With <code class=\"language-text\">yarn electron package</code>, you package the application into an executable file for your current operating system.\nThe packaged application will be located in <code class=\"language-text\">applications/electron/dist</code>.\nThe folder <code class=\"language-text\">applications/electron/dist/&lt;OS&gt;-unpackaged</code> will contain the files that are bundled into the final packaged executable.\nFor Linux, this is an executable <code class=\"language-text\">.AppImage</code>, for Windows a <code class=\"language-text\">.exe</code> installer, and a <code class=\"language-text\">.dmg</code> disk image for macOS.</p>\n<p>You can also just create the unpackaged content by running <code class=\"language-text\">yarn electron package:preview</code>.\nThis is useful to see the bundled files and saves time compared to a full package.\nTo publish the current version, the command <code class=\"language-text\">yarn electron deploy</code> can be used.\nFor more information on publishing also see section \"Configure publish and update\".</p>\n<h2 id=\"signing\" style=\"position:relative;\"><a href=\"#signing\" aria-label=\"signing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Signing</h2>\n<p><a href=\"https://www.electron.build/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Electron-builder</a> supports signing the packaged application on Windows and macOS.\nThe current signing scripts for the Theia IDE are located in <code class=\"language-text\">applications/electron/scripts</code>.\nThe file <code class=\"language-text\">after-pack.js</code> is the current entry point for the configured signing via Eclipse infrastructure.</p>\n<p>However, as signing is highly dependent on your setup, see the <a href=\"https://www.electron.build/code-signing\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">electron builderâ€™s signing documentation</a> on how to properly set up your own signing.</p>\n<h2 id=\"addingremoving-features\" style=\"position:relative;\"><a href=\"#addingremoving-features\" aria-label=\"addingremoving features permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Adding/Removing Features</h2>\n<p>The Theia IDE is based on the Theia platform, which is a flexible and adaptable platform for build tools and IDEs. Therefore, you can adapt the feature set and general appearance of the Theia IDE to your custom requirements with almost no limits. The Theia platform provides two mechanism to add your custom extensions: VS Code extensions and Theia extensions. Please have a look at the <a href=\"/theia-website-previews/pr-previews/pr-593/docs/extensions/\">overview about Theia extension capabilities</a> for details. When assembling a product such as the Theia IDE, you can freely decide, which VS Code extensions and Theia extensions are part of it and thereby influence the feature set of your custom product. The following two sections describe how to modify which <a href=\"#updating-bundled-vs-code-extensions\">VS Code Extensions</a> and which <a href=\"#customizing-theia-extensions\">Theia extensions</a> are part of your product. Please also note that you can allow users of a Theia-based tool to <a href=\"/theia-website-previews/pr-previews/pr-593/docs/user_install_vscode_extensions/\">install VS Code extensions at runtime</a>.</p>\n<h2 id=\"updating-bundled-vs-code-extensions\" style=\"position:relative;\"><a href=\"#updating-bundled-vs-code-extensions\" aria-label=\"updating bundled vs code extensions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Updating Bundled VS Code Extensions</h2>\n<p>All VS Code extensions that are already included in the product at start-up (\"built-ins\"), are defined in <code class=\"language-text\">applications/electron/package.json</code>.\nThey are listed under the <code class=\"language-text\">theiaPlugins</code> property as key-value pairs.\nThe keys can be freely chosen as long as they represent a valid folder name and are unique within the <code class=\"language-text\">theiaPlugins</code> property.\nWe suggest using the extensionâ€™s unique identifier.\nThe value is the download URL of the extensions.\nIt will automatically be downloaded during the applicationâ€™s build process.\nAny new plugin will be automatically downloaded the next time one of the following npm scripts is executed:</p>\n<ul>\n<li><code class=\"language-text\">install</code> (which is the same as just running <code class=\"language-text\">yarn</code>)</li>\n<li><code class=\"language-text\">prepare</code></li>\n<li><code class=\"language-text\">download:plugins</code></li>\n</ul>\n<p>To remove an extension from the product, simply delete its entry.\nIf plugins were not already downloaded, no further steps are required as downloaded plugins are ignored via gitignore.\nHowever, previously downloaded plugins are not automatically removed.\nTherefore, you need to remove its folder from the <code class=\"language-text\">applications/electron/plugins</code> folder.\nAlternatively, you can remove the whole <code class=\"language-text\">applications/electron/plugins</code> folder and execute <code class=\"language-text\">yarn electron download:plugins</code> to download all defined plugins.</p>\n<h3 id=\"extension-sources\" style=\"position:relative;\"><a href=\"#extension-sources\" aria-label=\"extension sources permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Extension sources</h3>\n<p>We use the <a href=\"https://open-vsx.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Open VSX Registry</a> of the Eclipse Foundation to install extensions.\nIt is an open and community-driven VS Code extension marketplace.\nMore information can be found at <a href=\"https://www.eclipse.org/legal/open-vsx-registry-faq/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">eclipse.org</a>.</p>\n<h2 id=\"customizing-theia-extensions\" style=\"position:relative;\"><a href=\"#customizing-theia-extensions\" aria-label=\"customizing theia extensions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Customizing Theia Extensions</h2>\n<p>Eclipse Theia extensions can be added through <code class=\"language-text\">dependencies</code> in <code class=\"language-text\">applications/electron/package.json</code>.\nLike any other dependency, it will be installed via yarn.\nSimilarly, removing an extension works by removing it from <code class=\"language-text\">dependencies</code>.\nFor extensions already published on npm (or your private npm registry) this is all you need to do.</p>\n<p>An alternative approach is developing your extension inside Theia IDEâ€™s mono repo.\nThe advantage of doing this is that you donâ€™t need to publish the extension and can build the product with the local version of the extension.\nThis is facilitated by the lerna build already configured in the Theia IDEsâ€™s repository.\nIt links the product and all extensions in the repository together during the build.</p>\n<p>The easiest way to create a new extension is to use the <a href=\"https://www.npmjs.com/package/generator-theia-extension\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">official yeoman generator</a> for Theia extensions.\nAssuming you have <a href=\"https://yeoman.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">yeoman</a> globally installed on your system, simply create a new extension in the repository root with <code class=\"language-text\">yo theia-extension --standalone</code>.\nThe <code class=\"language-text\">--standalone</code> flag is used to only create an extension but not a whole Theia application frame because it is already provided by the Theia IDE.\nAfter successfully generating the extension, add its folder name to the Theia IDEsâ€™s root <code class=\"language-text\">package.json</code> in the workspaces property.\nAfter adding the extension to the dependencies in <code class=\"language-text\">applications/electron/package.json</code> as described above, the new extension will be part of the built product.</p>\n<h2 id=\"branding\" style=\"position:relative;\"><a href=\"#branding\" aria-label=\"branding permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Branding</h2>\n<p>You can also add your own branding to the product by customizing the application icons and title, the welcome page and the About dialog.\nIn addition, some parts of the installer can be customized.</p>\n<h3 id=\"customizing-the-app\" style=\"position:relative;\"><a href=\"#customizing-the-app\" aria-label=\"customizing the app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Customizing the App</h3>\n<h4 id=\"application-window-title\" style=\"position:relative;\"><a href=\"#application-window-title\" aria-label=\"application window title permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Application Window Title</h4>\n<p>The window title is the applicationâ€™s name if no workspace is opened and <code class=\"language-text\">&lt;workspace name&gt; â€” &lt;application name&gt;</code> if a workspace is opened.\nThe application name can be adapted in <code class=\"language-text\">applications/electron/package.json</code>:\nOpen the file and adapt the value of property <code class=\"language-text\">theia.frontend.config.applicationName</code> to the desired name.</p>\n<h4 id=\"application-icons\" style=\"position:relative;\"><a href=\"#application-icons\" aria-label=\"application icons permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Application Icons</h4>\n<p>Application icons are located in <code class=\"language-text\">applications/electron/resources/</code>.\nSimply replace them with your own icons.\nBecause each operating system handles icons differently, they should all be replaced to ensure proper use.\nThey map as follows:</p>\n<ul>\n<li>macOS: icons.icns</li>\n<li>Windows: icon.ico</li>\n<li>Linux: icons subfolder</li>\n</ul>\n<h3 id=\"customizing-the-welcome-page\" style=\"position:relative;\"><a href=\"#customizing-the-welcome-page\" aria-label=\"customizing the welcome page permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Customizing the Welcome Page</h3>\n<p>The Eclipse Theia welcome page can be customized by binding a custom <code class=\"language-text\">WidgetFactory</code> for Theiaâ€™s <code class=\"language-text\">GettingStartedWidget</code>.\nThis is done with the Theia IDE in the theia-blueprint-product extension.\nThe easiest way to customize the welcome page is to adapt the class <code class=\"language-text\">TheiaBlueprintGettingStartedWidget</code> in <code class=\"language-text\">theia-extensions/theia-blueprint-product/src/browser/theia-blueprint-getting-started-widget.tsx</code>.</p>\n<p>The widget is bound in <code class=\"language-text\">theia-extensions/theia-blueprint-product/src/browser/theia-blueprint-frontend-module.ts</code> like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">    <span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>TheiaBlueprintGettingStartedWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toSelf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>WidgetFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toDynamicValue</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">context</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        id<span class=\"token operator\">:</span> GettingStartedWidget<span class=\"token punctuation\">.</span><span class=\"token constant\">ID</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">createWidget</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> context<span class=\"token punctuation\">.</span>container<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token operator\">&lt;</span>TheiaBlueprintGettingStartedWidget<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>TheiaBlueprintGettingStartedWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">inSingletonScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>To use another custom widget, remove this code and bind your widget correspondingly.</p>\n<h3 id=\"customizing-the-about-dialog\" style=\"position:relative;\"><a href=\"#customizing-the-about-dialog\" aria-label=\"customizing the about dialog permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Customizing the About Dialog</h3>\n<p>The Eclipse Theia about dialog can be customized by binding a custom subclass of Theiaâ€™s <code class=\"language-text\">AboutDialog</code> class to <code class=\"language-text\">AboutDialog</code>.\nThis is done with Theia IDE in the theia-blueprint-product extension.\nThe easiest way to customize the about dialog is to adapt the class <code class=\"language-text\">TheiaBlueprintAboutDialog</code> in <code class=\"language-text\">theia-extensions/theia-blueprint-product/src/browser/theia-blueprint-about-dialog.tsx</code>.</p>\n<p>The widget is bound in <code class=\"language-text\">theia-extensions/theia-blueprint-product/src/browser/theia-blueprint-frontend-module.ts</code> like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token function\">isBound</span><span class=\"token punctuation\">(</span>AboutDialog<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">rebind</span><span class=\"token punctuation\">(</span>AboutDialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>TheiaBlueprintAboutDialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">inSingletonScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>AboutDialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>TheiaBlueprintAboutDialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">inSingletonScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>To use another custom dialog widget, remove this code, extend Theiaâ€™s AboutDialog class, and (re)bind it as above.</p>\n<h3 id=\"customizing-the-preferences\" style=\"position:relative;\"><a href=\"#customizing-the-preferences\" aria-label=\"customizing the preferences permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Customizing the Preferences</h3>\n<p>The default preferences directory in Eclipse Theia IDE is <code class=\"language-text\">.theia-blueprint</code> and is located as described in the <a href=\"/theia-website-previews/pr-previews/pr-593/docs/preferences/\">Preferences documentation</a>. You can customize this location by modifying <a href=\"https://github.com/eclipse-theia/theia-blueprint/blob/master/theia-extensions/theia-blueprint-product/src/node/theia-blueprint-variables-server.ts\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">theia-blueprint-variables-server.ts</code></a>.</p>\n<h3 id=\"customizing-the-electron-splash-screen\" style=\"position:relative;\"><a href=\"#customizing-the-electron-splash-screen\" aria-label=\"customizing the electron splash screen permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Customizing the Electron Splash Screen</h3>\n<p>Since Theia <code class=\"language-text\">1.49.0</code> Theia Electron applications support displaying a splash screen before showing the main window.</p>\n<p>The splash screen can be enabled within the application <code class=\"language-text\">package.json</code>'s Theia options by providing an object at <code class=\"language-text\">theia.frontend.config.electron.splashScreenOptions</code> with the following properties:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token punctuation\">{</span>\n    content<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>  <span class=\"token comment\">// &lt;mandatory> path to the content to render within the splash screen, resolved from application root</span>\n    width<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token comment\">// default 640</span>\n    height<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token comment\">// default 480</span>\n    minDuration<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token comment\">// minimum amount of time in milliseconds to show the splash screen before main window is shown. default 0</span>\n    maxDuration<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token comment\">// maximum amount of time in milliseconds before splash screen is removed and main window is shown. default 30000</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If not configured otherwise via <code class=\"language-text\">minDuration</code>, the splash screen will be shown until the frontend is ready, i.e. when the loading spinner is gone.\nThen the splash screen will be closed and the main window is shown.</p>\n<h3 id=\"showing-windows-early\" style=\"position:relative;\"><a href=\"#showing-windows-early\" aria-label=\"showing windows early permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Showing Windows Early</h3>\n<p>The main window / splash screen can be configured to be shown \"early\", i.e. the window will be shown before it's ready to render content.\nBy default this is <code class=\"language-text\">true</code> to give the user visual feedback as early as possible.</p>\n<p>If you prefer only showing the main window / splash screen once they are ready to render content, then you can configure <code class=\"language-text\">theia.frontend.config.electron.showWindowEarly: false</code> in your application's <code class=\"language-text\">package.json</code>.</p>\n<h3 id=\"customizing-the-installer\" style=\"position:relative;\"><a href=\"#customizing-the-installer\" aria-label=\"customizing the installer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Customizing the Installer</h3>\n<p>The installers are created using <a href=\"https://www.electron.build/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">electron-builder</a>.\nThe corresponding configuration file is located at <code class=\"language-text\">applications/electron/electron-builder.yml</code>.</p>\n<h4 id=\"installer-file-base-name\" style=\"position:relative;\"><a href=\"#installer-file-base-name\" aria-label=\"installer file base name permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installer File Base Name</h4>\n<p>The installer filesâ€™ base names are defined by the <code class=\"language-text\">productName</code> property in <code class=\"language-text\">applications/electron/electron-builder.yml</code>.</p>\n<h4 id=\"windows-installer\" style=\"position:relative;\"><a href=\"#windows-installer\" aria-label=\"windows installer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Windows Installer</h4>\n<p>As is typical for Windows applications, there is an installation wizard for the Windows version of the Theia IDE.\nThe installer is configured in the nsis section of the configuration file.\nAvailable customizations include settings such as:</p>\n<ul>\n<li>Icons</li>\n<li>Sidebar image</li>\n<li>License</li>\n<li>One click installation</li>\n<li>Automatic application start after installation</li>\n<li>Whether users can change the installation directory</li>\n</ul>\n<p>More details on available options and how they can be customized can be found in the <a href=\"https://www.electron.build/configuration/nsis\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">official electron builder documentation</a>.\nThis documentation also includes information about more advanced features such as custom NSIS scripts.</p>\n<h2 id=\"configure-publish-and-update\" style=\"position:relative;\"><a href=\"#configure-publish-and-update\" aria-label=\"configure publish and update permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configure Publish and Update</h2>\n<p>The Theia IDE uses <a href=\"https://www.electron.build/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">electron-builder</a> to create and publish installers.\nIt also uses <a href=\"https://www.npmjs.com/package/electron-updater\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">electron-updater</a>, developed by the electron-builder organization, to provide automatic updates of the installed application.</p>\n<p>There are various deployment targets which can be configured in the <code class=\"language-text\">applications/electron/package.json</code> and <code class=\"language-text\">applications/electron/electron-builder.yml</code> as documented <a href=\"https://www.electron.build/configuration/publish\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a> in the Electron Builder documentation.\nMultiple publish configurations can be configured.\nThereby, the first one is automatically used by the updater to look for available updates.\nThe currently used generic publishing method does not automatically publish to the specified server, but is just used as the lookup location for the updater.</p>","fields":{"slug":"blueprint_documentation"}}},"pageContext":{"slug":"blueprint_documentation"}}}