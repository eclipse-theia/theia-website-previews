{"componentChunkName":"component---src-templates-doc-js","path":"/docs/authoring_vscode_extensions","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Authoring VS Code Extensions"},"html":"<h1 id=\"authoring-vs-code-extensions\" style=\"position:relative;\"><a href=\"#authoring-vs-code-extensions\" aria-label=\"authoring vs code extensions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Authoring VS Code Extensions</h1>\n<p>Alongside <a href=\"/theia-website-previews/pr-previews/pr-557/docs/extensions#theia-extensions\">Theia extensions</a>, VS Code extensions can also be used to enhance Theia applications with additional functionality, such as language support, commands, or tree views.\nVS Code extensions contribute functionality through the dedicated VS Code API, which the Theia framework also supports.\nThis means that extensions that have been developed for VS Code are also compatible with Theia, and vice versa.\nThe <a href=\"https://eclipse-theia.github.io/vscode-theia-comparator/status.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">coverage report</a> provides more details on the extent to which the VS Code API is supported by each Theia version.</p>\n<p>While there are certain overlaps in which types of functionality can be contributed to a Theia application with a Theia extension or a VS Code extension, both have their unique advantages and disadvantages.\nPlease refer to the overview on <a href=\"/theia-website-previews/pr-previews/pr-557/docs/extensions\">extensions and plugins</a> and an <a href=\"https://eclipsesource.com/blogs/2021/03/24/vs-code-extensions-vs-theia-extensions/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">in-depth comparison</a> for a more detailed discussion.</p>\n<p>In the remainder of this page, we guide you through the process of creating VS Code extensions and deploying them in Theia.\nThe steps for deploying VS Code extensions apply not only to VS Code extensions you develop yourself, but also to third-party VS Code extensions from the <a href=\"https://open-vsx.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Theia marketplace</a>. If you use a third-party VS Code extension, you can skip the section \"Creating VS Code Extensions\" and \"Developing VS Code Extensions in a Theia Project\".</p>\n<h2 id=\"creating-vs-code-extensions\" style=\"position:relative;\"><a href=\"#creating-vs-code-extensions\" aria-label=\"creating vs code extensions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating VS Code Extensions</h2>\n<p>As VS Code extensions can be used in Theia without further modification, you can refer to the <a href=\"https://code.visualstudio.com/api\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">documentation on extending VS Code</a> to learn more about creating extensions for VS Code as well as for Theia.\nThe easiest way to get started is to use the <a href=\"https://www.npmjs.com/package/generator-code\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">VS Code Extension Generator</a> and follow the <a href=\"https://code.visualstudio.com/api/get-started/your-first-extension\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Getting Started Guide</a>.</p>\n<p>As an example, let's generate the hello world extension.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g yo generator-code <span class=\"token comment\"># install the VS Code Extension Generator</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g vsce <span class=\"token comment\"># install VS Code Extension CLI tooling</span>\n\nyo code <span class=\"token comment\"># generate an extension</span>\n<span class=\"token comment\"># take a look at the generated package.json defining a command \"Hello World\"</span>\n<span class=\"token comment\"># take a look at the src/extension.ts registering a command handler</span>\n<span class=\"token comment\"># make changes to the README and the code, if you like</span>\nvsce package <span class=\"token comment\"># package your VS Code extension</span></code></pre></div>\n<p>As a result, a <code class=\"language-text\">vsix</code> file is generated, which can be used directly in VS Code and Theia (see below).\nPlease note that you can also create so-called extension packs with the VS Code extension generator that defines a collection of extensions.</p>\n<h2 id=\"prerequisites-for-running-vs-code-extensions-in-theia\" style=\"position:relative;\"><a href=\"#prerequisites-for-running-vs-code-extensions-in-theia\" aria-label=\"prerequisites for running vs code extensions in theia permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prerequisites for Running VS Code Extensions in Theia</h2>\n<p>To enable Theia's support for VS Code extensions in order to use your own extensions or third-party VS Code extensions in your Theia application, you'll need to add <code class=\"language-text\">@theia/plugin-ext-vscode</code> as a dependency.\nTypically, this is done in your browser or electron application package.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  ...\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"browser-app\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"@theia/core\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"latest\"</span><span class=\"token punctuation\">,</span>\n    ...\n    <span class=\"token property\">\"@theia/plugin-ext-vscode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"latest\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"theia\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"browser\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, you need to specify a <em>plugins location</em>, which is a disk location containing your VS Code extensions.\nTheia will load all VS Code extensions from this location on initialization of a new user session automatically.\nThis location can be set either with an environment variable:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">THEIA_DEFAULT_PLUGINS</span><span class=\"token operator\">=</span>local-dir://absolute-path-to-plugins-folder</code></pre></div>\n<p>Or it can be provided in the command line option <code class=\"language-text\">--plugins</code> when starting Theia.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">theia start --plugins<span class=\"token operator\">=</span>local-dir:<span class=\"token punctuation\">..</span>/plugins</code></pre></div>\n<p>A common approach for Theia applications that include VS Code extensions is to add this command line parameter to the startup script in the browser or electron application package.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  ...\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"browser-app\"</span><span class=\"token punctuation\">,</span>\n  ...\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    ...\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"theia start --plugins=local-dir:../plugins\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"theia\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"browser\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"consuming-vs-code-extensions\" style=\"position:relative;\"><a href=\"#consuming-vs-code-extensions\" aria-label=\"consuming vs code extensions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Consuming VS Code Extensions</h2>\n<p>Once you've enabled VS Code extension support in your Theia application as described above and made available your or any third-party VS Code extensions that you'd like to use in your Theia application, you have two options on how to consume them:</p>\n<ol>\n<li>Pre-installing the VS Code extension in your Theia application</li>\n<li>Enabling your users to install your VS Code extensions at runtime</li>\n</ol>\n<p>In the following, we'll provide more details on each of those options.</p>\n<h3 id=\"pre-installing-vs-code-extensions\" style=\"position:relative;\"><a href=\"#pre-installing-vs-code-extensions\" aria-label=\"pre installing vs code extensions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pre-installing VS Code Extensions</h3>\n<p>For pre-installing a certain set of VS Code extensions in your Theia application, all you need to do is to drop them, either as a <code class=\"language-text\">vsix</code> file or directly as a folder into the <em>plugins location</em> (see <a href=\"#prerequisites-for-running-vs-code-extensions-in-theia\">prerequisites</a>).\nOn start-up of a user session, Theia will load all VS Code extensions from that location automatically.</p>\n<p>A more systematic approach, however, is to publish VS Code extensions, to <a href=\"https://open-vsx.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">OpenVSX</a>, GitHub Releases, or any other accessible location, and download them automatically at build time of the Theia application with the Theia CLI.\nSee <a href=\"https://github.com/eclipse/openvsx/wiki/Publishing-Extensions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">publishing extensions to OpenVSX</a> for more details.\nThis approach avoids having to manually distribute VS Code extensions or adding them in the form of a build artifact to your git repository.</p>\n<p>Therefore, you need to extend your <code class=\"language-text\">package.json</code> to</p>\n<ol>\n<li>specify the <em>plugins location</em> to the Theia CLI</li>\n<li>define the VS Code extensions to be downloaded</li>\n<li>add a download script for convenience</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  ...\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"prepare\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"yarn run clean &amp;&amp; yarn build &amp;&amp; yarn run download:plugins\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"download:plugins\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"theia download:plugins\"</span><span class=\"token punctuation\">,</span>\n    ...\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"theiaPluginsDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"plugins\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"theiaPlugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"my-hello-world-extension\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://&lt;url-to-your-published-extension>\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"vscode.git\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://open-vsx.org/api/vscode/git/1.52.1/file/vscode.git-1.52.1.vsix\"</span><span class=\"token punctuation\">,</span>\n      ...\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>As a result, running <code class=\"language-text\">yarn</code> will download any listed extensions and place them into the folder specified in <code class=\"language-text\">theiaPluginsDir</code> automatically.\nFor more details, see also the documentation on <a href=\"/theia-website-previews/pr-previews/pr-557/docs/composing_applications/#consuming-vs-code-extensions\">composing Theia applications</a>.</p>\n<h3 id=\"installing-vs-code-extensions-at-runtime\" style=\"position:relative;\"><a href=\"#installing-vs-code-extensions-at-runtime\" aria-label=\"installing vs code extensions at runtime permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing VS Code Extensions at Runtime</h3>\n<p>One of the unique advantages of VS Code extensions is that they can be installed and uninstalled by users at runtime.\nTo enable the users of your Theia application to install VS Code extensions at runtime, you have to add <code class=\"language-text\">@theia/vsx-registry</code> as a dependency to your <code class=\"language-text\">package.json</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  ...\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"browser-app\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"@theia/core\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"latest\"</span><span class=\"token punctuation\">,</span>\n    ...\n    <span class=\"token property\">\"@theia/vsx-registry\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"latest\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"theia\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"browser\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This dependency will add a view <em>Extensions</em> to your application, which allows searching and installing extensions from an OpenVSX registry.\nBy default, the public registry at <a href=\"http://open-vsx.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://open-vsx.org</a> is used, the registry URL be configured via the environment variable <code class=\"language-text\">VSX_REGISTRY_URL</code>.\nPlease confer to the <a href=\"https://www.npmjs.com/package/@theia/vsx-registry\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">OpenVSX extension documentation</a> for more details.</p>\n<p>To make your VS Code extension available, you'll need to <a href=\"https://github.com/eclipse/openvsx/wiki/Publishing-Extensions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">publish</a> your extension to the configured registry.</p>\n<h2 id=\"developing-vs-code-extensions-in-a-theia-project\" style=\"position:relative;\"><a href=\"#developing-vs-code-extensions-in-a-theia-project\" aria-label=\"developing vs code extensions in a theia project permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Developing VS Code Extensions in a Theia Project</h2>\n<p>In certain scenarios, you may not want to develop your VS Code extension in isolation from your Theia application, but instead you may prefer to develop both your extensions and your application in project to keep update cycles short and immediate.\nThis is particularly useful if you develop your extensions primarily to be part a specific Theia application, thus you want to develop, test and debug them directly in the context of your Theia app, potentially alongside other <a href=\"/theia-website-previews/pr-previews/pr-557/docs/extensions#theia-extensions\">Theia extensions</a>.</p>\n<p>In those scenarios, you can also include VS Code extensions as part of your Theia application monorepo.\nWhile there are several possible configuration options, probably the most straightforward approach is to follow the steps below.</p>\n<p>Generate your VS Code extension as usual.\nHowever, to make things easier and consistent, choose <code class=\"language-text\">TypeScript</code> as your language and <code class=\"language-text\">yarn</code> as a package manager for your VS Code extension to be aligned with a typical Theia application.</p>\n<p>Put your VS Code extension package, let's say <code class=\"language-text\">your-vs-code-extension</code>, into your monorepo, alongside your other packages and make sure it is part of your yarn workspaces.\nLet's assume, we eventually have the following a directory structure.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">monorepo\n├── apps\n│   ├── browser-app\n│   └── electron-app\n├── extensions\n│   ├── your-theia-extension\n│   └── your-vs-code-extension\n├── plugins\n└── package.json</code></pre></div>\n<p>In <code class=\"language-text\">your-vs-code-extension/package.json</code>, add <code class=\"language-text\">symlink</code> as a dev dependency to link your extension into the <em>plugins location</em> of your Theia application on each build.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    ...\n    <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"compile\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tsc -p ./\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"watch\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tsc -watch -p ./\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"prepare\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"yarn run clean &amp;&amp; yarn run build &amp;&amp; yarn symlink\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"symlink\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"symlink-dir . ../../plugins/your-vs-code-extension\"</span><span class=\"token punctuation\">,</span>\n        ...\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"@types/vscode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^1.32.0\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"symlink-dir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"latest\"</span><span class=\"token punctuation\">,</span>\n        ...\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>With that, your VS Code extension will be built as part of your Theia application and directly added to the <em>plugins location</em> for automatic installation in your Theia application.\nThis leads to a consistent development experience, even if you have multiple VS Code extensions and Theia extensions combined in one Theia application.</p>\n<p>If you aim at a consistent <code class=\"language-text\">tsconfig.json</code> across your VS Code extension and a typical Theia extension, you may want to change the <code class=\"language-text\">outDir</code> from <code class=\"language-text\">out</code> (default in VS Code) to <code class=\"language-text\">lib</code> (commonly used in Theia) and adjust the <code class=\"language-text\">package.json</code> accordingly.</p>\n<p>To also enable debugging from your development IDE (VS Code), you need to setup <code class=\"language-text\">launch.json</code> to include the VS Code extension in the <code class=\"language-text\">outFiles</code> (if it is still building to the folder <code class=\"language-text\">out</code> and not <code class=\"language-text\">lib</code>) and enable source maps.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.2.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"configurations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"request\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"launch\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Start Browser Backend\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"program\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"${workspaceRoot}/browser-app/src-gen/backend/main.js\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"--loglevel=debug\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"--port=3000\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"--no-cluster\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"--plugins=local-dir:${workspaceRoot}/plugins\"</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"env\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token property\">\"NODE_ENV\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"development\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token property\">\"NODE_OPTIONS\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"--enable-source-maps\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"sourceMaps\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"outFiles\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"${workspaceRoot}/node_modules/@theia/*/lib/**/*.js\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"${workspaceRoot}/extensions/*/lib/**/*.js\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"${workspaceRoot}/extensions/*/out/**/*.js\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"${workspaceRoot}/apps/*/src-gen/**/*.js\"</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"smartStep\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"internalConsoleOptions\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"openOnSessionStart\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"outputCapture\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"std\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        ...\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","fields":{"slug":"authoring_vscode_extensions"}}},"pageContext":{"slug":"authoring_vscode_extensions"}}}