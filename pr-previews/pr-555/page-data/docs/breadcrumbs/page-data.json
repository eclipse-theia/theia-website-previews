{"componentChunkName":"component---src-templates-doc-js","path":"/docs/breadcrumbs","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Breadcrumbs"},"html":"<h1 id=\"breadcrumbs\" style=\"position:relative;\"><a href=\"#breadcrumbs\" aria-label=\"breadcrumbs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Breadcrumbs</h1>\n<p>If enabled via the preferences, Theia can show a navigation bar, often referred to as <em>breadcrumbs</em>, above the content of widgets that are located in the main area of the workbench.\nThis interactive navigation bar indicates the location of the widget's content in the context of an overall structure, such as the filesystem.\nBy default, Theia shows breadcrumbs for the location of files in the filesystem when a file is opened in the text editors.</p>\n<img src=\"../../breadcrumbs.png\" alt=\"A screenshot of breadcrumbs in Theia\" style=\"max-width: 525px\">\n<p>However, Theia's breadcrumbs mechanism can also be used for any custom widget, too.\nMoreover, Theia allows showing a widget's content location in an arbitrary custom logical structure, such as a custom project structure.\nOn this page, we describe how custom breadcrumbs work and how widgets declare their location within an overall structure.</p>\n<h2 id=\"breadcrumbs-contributions-and-navigatable-widgets\" style=\"position:relative;\"><a href=\"#breadcrumbs-contributions-and-navigatable-widgets\" aria-label=\"breadcrumbs contributions and navigatable widgets permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Breadcrumbs Contributions and Navigatable Widgets</h2>\n<p>What is being shown in the breadcrumbs of a widget is defined by breadcrumbs contributions.\nSuch contributions must implement the <code class=\"language-text\">BreadcrumbsContribution</code> interface and return an array of <code class=\"language-text\">Breadcrumbs</code> for a specific URI, which are then shown for any widget that specifies this URI as their content's location.\nA widget declares the location of its content in the form of a URI by implementing the interface <code class=\"language-text\">NavigatableWidget</code>.</p>\n<p>So let's look at an example widget that declares an arbitrary URI.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">@<span class=\"token function\">injectable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomWidget</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ReactWidget</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">NavigatableWidget</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token function\">getResourceUri</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">URI</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URI</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resource://project-a/component-b/config-c'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>When this <code class=\"language-text\">CustomWidget</code> is opened, Theia will look for breadcrumbs contributions that return breadcrumbs for this URI.\nBy default, it won't find any and thus won't show any breadcrumbs.\nSo let's add a breadcrumbs contribution that reacts to URIs with the scheme <code class=\"language-text\">resource</code> as used by our widget above.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ContainerModule</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">bind</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>CustomBreadcrumbsContribution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toSelf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">inSingletonScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>BreadcrumbsContribution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toService</span><span class=\"token punctuation\">(</span>CustomBreadcrumbsContribution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">injectable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomBreadcrumbsContribution</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BreadcrumbsContribution</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">type</span><span class=\"token operator\">:</span> <span class=\"token builtin\">symbol</span> <span class=\"token operator\">=</span> CustomBreadcrumbType<span class=\"token punctuation\">;</span>\n    priority<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">readonly</span> onDidChangeBreadcrumbsEmitter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Emitter</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">URI</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">get</span> <span class=\"token function\">onDidChangeBreadcrumbs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Event<span class=\"token operator\">&lt;</span><span class=\"token constant\">URI</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onDidChangeBreadcrumbsEmitter<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">computeBreadcrumbs</span><span class=\"token punctuation\">(</span>uri<span class=\"token operator\">:</span> <span class=\"token constant\">URI</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> MaybePromise<span class=\"token operator\">&lt;</span>Breadcrumb<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>uri<span class=\"token punctuation\">.</span>scheme <span class=\"token operator\">!==</span> <span class=\"token string\">'resource'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// uri is 'resources://project-a/component-b/config-c' for our widget above</span>\n        <span class=\"token comment\">// but let's just hard code breadcrumbs as an example for the sake of simplicity</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span>\n                id<span class=\"token operator\">:</span> <span class=\"token string\">'project'</span><span class=\"token punctuation\">,</span>\n                label<span class=\"token operator\">:</span> <span class=\"token string\">'Project A'</span><span class=\"token punctuation\">,</span>\n                longLabel<span class=\"token operator\">:</span> <span class=\"token string\">'The project'</span><span class=\"token punctuation\">,</span>\n                iconClass<span class=\"token operator\">:</span> <span class=\"token string\">'codicon codicon-folder default-folder-icon file-icon'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">type</span><span class=\"token operator\">:</span> CustomBreadcrumbType\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span>\n                id<span class=\"token operator\">:</span> <span class=\"token string\">'component'</span><span class=\"token punctuation\">,</span>\n                label<span class=\"token operator\">:</span> <span class=\"token string\">'Component B'</span><span class=\"token punctuation\">,</span>\n                longLabel<span class=\"token operator\">:</span> <span class=\"token string\">'A component within a project'</span><span class=\"token punctuation\">,</span>\n                iconClass<span class=\"token operator\">:</span> <span class=\"token string\">'codicon codicon-file default-file-icon file-icon'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">type</span><span class=\"token operator\">:</span> CustomBreadcrumbType\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">{</span>\n                id<span class=\"token operator\">:</span> <span class=\"token string\">'config'</span><span class=\"token punctuation\">,</span>\n                label<span class=\"token operator\">:</span> <span class=\"token string\">'Configuration C'</span><span class=\"token punctuation\">,</span>\n                longLabel<span class=\"token operator\">:</span> <span class=\"token string\">'A configuration within a component'</span><span class=\"token punctuation\">,</span>\n                iconClass<span class=\"token operator\">:</span> <span class=\"token string\">'markdown-icon medium-blue theia-file-icons-js file-icon'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">type</span><span class=\"token operator\">:</span> CustomBreadcrumbType\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Once the breadcrumbs contribution is registered, Theia will show the following for our custom widget.</p>\n<img src=\"../../breadcrumbs-custom.png\" alt=\"A screenshot of custom breadcrumbs in Theia\" style=\"max-width: 525px\">\n<h2 id=\"interactive-breadcrumbs\" style=\"position:relative;\"><a href=\"#interactive-breadcrumbs\" aria-label=\"interactive breadcrumbs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Interactive Breadcrumbs</h2>\n<p>Breadcrumbs contributions also must implement the method <code class=\"language-text\">attachPopupContent</code>.\nTheia invokes this method as soon as a user clicks on one of the breadcrumbs and passes a parent HTML element into which the breadcrumbs contribution can now add arbitrary HTML content, including trees, buttons, etc.\nThis content is consequently being shown as a popup below the clicked breadcrumbs element.\nIf this method returns a <code class=\"language-text\">Disposable</code>, Theia will call it, once the popup is closed, allowing to dispose resources that may have been allocated for the rendered content.</p>\n<p>As an example, let's just return add some simple HTML to the popup, as shown below.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">@<span class=\"token function\">injectable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomBreadcrumbsContribution</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BreadcrumbsContribution</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token function\">attachPopupContent</span><span class=\"token punctuation\">(</span>breadcrumb<span class=\"token operator\">:</span> Breadcrumb<span class=\"token punctuation\">,</span> parent<span class=\"token operator\">:</span> HTMLElement<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>Disposable <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        parent<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;div style=\"margin-left: 10px\">&lt;h3>'</span>\n                            <span class=\"token operator\">+</span> breadcrumb<span class=\"token punctuation\">.</span>label\n                            <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/h3>&lt;p>We can show arbitrary content here and react to clicks.&lt;/p>&lt;/div>'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<img src=\"../../breadcrumbs-popup.png\" alt=\"A screenshot of custom breadcrumbs with a popup in Theia\" style=\"max-width: 525px\">\n<h2 id=\"priority-of-breadcrumbs-contributions\" style=\"position:relative;\"><a href=\"#priority-of-breadcrumbs-contributions\" aria-label=\"priority of breadcrumbs contributions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Priority of Breadcrumbs Contributions</h2>\n<p>As defined by the <code class=\"language-text\">BreadcrumbsContribution</code> interface, a contribution must define a <code class=\"language-text\">priority</code>.\nThe property is used by Theia to properly order the breadcrumbs returned by all breadcrumbs contributions.\nThus, if you have for instance three breadcrumbs contributions that return a non-empty array of breadcrumbs for a particular URI, we'll end up with a final breadcrumbs list that contains all breadcrumbs of all three contributions ordered from lowest to highest priority.\nThe Theia text editor uses this mechanism to append logical structures of code to a source file, for instance.\nContributions that return an empty array for a specific URI are obviously ignored.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Contribution A with a priority of 10 returns [a, b]\nContribution B with a priority of 20 returns [c, d]\nContribution C with a priority of 30 returns [e, f]\n=&gt; [a, b, c, d, e, f]</code></pre></div>\n<h2 id=\"file-uris\" style=\"position:relative;\"><a href=\"#file-uris\" aria-label=\"file uris permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>File URIs</h2>\n<p>Theia's filesystem extension registers a breadcrumbs contribution that returns breadcrumbs according to the directory hierarchy for any file URI, such as <code class=\"language-text\">file://home/user/a/b/c.txt</code>.\nThe breadcrumbs returned by that contribution are also interactive by showing a file tree on click for navigating to adjacent files.</p>\n<p>You can also make use of the filesystem breadcrumbs in custom widgets by just returning file URIs in your implementation of <code class=\"language-text\">NavigatableWidget#getResourceUri()</code>.\nIf needed, you can also register additional breadcrumbs contributions with a high number as priority to append to the file URI shown in the breadcrumbs, such as for navigating to specific sections in your custom widget.</p>\n<p>Accordingly, however, if you want to avoid showing filesystem breadcrumbs altogether and only use custom breadcrumbs, your widget must return a URI that isn't a file URI, for instance <code class=\"language-text\">resource://a/b/c</code>.</p>","fields":{"slug":"breadcrumbs"}}},"pageContext":{"slug":"breadcrumbs"}}}