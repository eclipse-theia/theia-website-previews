{"componentChunkName":"component---src-templates-doc-js","path":"/docs/backend_application_contribution","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Backend Application Contributions"},"html":"<h1 id=\"backend-application-contributions\" style=\"position:relative;\"><a href=\"#backend-application-contributions\" aria-label=\"backend application contributions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Backend Application Contributions</h1>\n<p>A backend application contribution allows Eclipse Theia extensions to hook into the lifecycle of the Theia backend. Backend application contributions are instantiated immediately after starting the backend application, which makes them a good place for initializing backend services that are required during the entire lifespan of the backend.</p>\n<p>To register backend application contributions, an extension needs to bind an implementation of the interface <code class=\"language-text\">BackendApplicationContribution</code> in the backend module.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ContainerModule</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">bind</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n   <span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>MemoryTracker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toSelf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">inSingletonScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>BackendApplicationContribution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toService</span><span class=\"token punctuation\">(</span>MemoryTracker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The interface <code class=\"language-text\">BackendApplicationContribution</code> provides hooks, which are all optional so that implementations can freely choose which of those hooks they are interested in, without having to implement the others.\nFor initialization of backend services, the most common hook is the <code class=\"language-text\">initialize()</code> method that is invoked as soon as the Theia backend is initialized.</p>\n<p>As an example, letâ€™s implement a backend service that shall run during the entire lifespan of the Theia backend to track its memory usage.\nFor the sake of simplicity it will just print the memory to the log, whenever it changes more than a certain threshold.</p>\n<p>Therefore, a <code class=\"language-text\">BackendApplicationContribution</code> named <code class=\"language-text\">MemoryTracker</code> is bound in the dependency injection context as shown in the code above.\nThe implementation of <code class=\"language-text\">MemoryTracker</code> reacts to the hook <code class=\"language-text\">initialize()</code> and executes the method <code class=\"language-text\">logMemory()</code> periodically every two seconds.\nThis method obtains the currently used memory, compares it to the previous memory and prints a message to the log as soon as the difference to the previous memory is above 0.1 MB.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">@<span class=\"token function\">injectable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MemoryTracker</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BackendApplicationContribution</span> <span class=\"token punctuation\">{</span>\n\n   @<span class=\"token function\">inject</span><span class=\"token punctuation\">(</span>ILogger<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">protected</span> <span class=\"token keyword\">readonly</span> logger<span class=\"token operator\">:</span> ILogger<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">protected</span> logTimer<span class=\"token operator\">:</span> NodeJS<span class=\"token punctuation\">.</span>Timer<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">protected</span> memoryUsed <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> MaybePromise<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>logTimer <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">logMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token keyword\">protected</span> <span class=\"token function\">logMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">const</span> currentMemoryUsed <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentRoundedMemoryUsage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">const</span> diff <span class=\"token operator\">=</span> currentMemoryUsed <span class=\"token operator\">-</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>memoryUsed<span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>diff<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n           <span class=\"token keyword\">const</span> timestamp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toUTCString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>\n               <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>timestamp<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">] PID </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>process<span class=\"token punctuation\">.</span>pid<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> uses </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>currentMemoryUsed<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> MB (</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>diff <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token string\">'+'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>diff<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span>\n           <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>memoryUsed <span class=\"token operator\">=</span> currentMemoryUsed<span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token keyword\">protected</span> <span class=\"token function\">currentRoundedMemoryUsage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span><span class=\"token function\">memoryUsage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>heapUsed <span class=\"token operator\">/</span> <span class=\"token number\">1024</span> <span class=\"token operator\">/</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token function\">onStop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>logTimer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n           <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>logTimer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Once this backend application contribution is registered and the backend is started, it starts logging an output, similar to the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">root INFO Theia app listening on http://localhost:3000.\nroot INFO Configuration directory URI: &#39;file:///home/foobar/.theia&#39;\nroot INFO [Fri, 20 Aug 2021 12:20:43 GMT] PID 46590 uses 18.14 MB (+18.14)\nroot INFO [Fri, 20 Aug 2021 12:20:47 GMT] PID 46590 uses 18.94 MB (+0.80)\nroot INFO [Fri, 20 Aug 2021 12:20:51 GMT] PID 46590 uses 15.25 MB (-3.69)\nroot INFO [Fri, 20 Aug 2021 12:21:07 GMT] PID 46590 uses 15.36 MB (+0.11)\nroot INFO [Fri, 20 Aug 2021 12:21:21 GMT] PID 46590 uses 15.47 MB (+0.11)\nroot INFO [Fri, 20 Aug 2021 12:21:41 GMT] PID 46590 uses 15.6 MB (+0.13)\nroot INFO [Fri, 20 Aug 2021 12:21:59 GMT] PID 46590 uses 15.71 MB (+0.11)</code></pre></div>\n<p>Often such backend application contributions also provide methods that can be invoked by other backend services and, for instance, start external processes that need to be available as soon as the application is started.\nExamples are database connections, REST services, etc.</p>\n<p>In addition to initializing backend services as early as the backend is started, backend application contributions can also configure and extend the HTTP server used by the Theia backend.\nTherefore, the <code class=\"language-text\">BackendApplicationContribution</code> interface provides the three methods <code class=\"language-text\">configure(app: express.Application)</code>, <code class=\"language-text\">onStart(app: express.Application)</code>, and <code class=\"language-text\">onStop(app: express.Application)</code>.\nThus, the HTTP server can be configured with custom settings and even extended with additional endpoints that need to be available for the respective Theia application.</p>\n<p>An example for configuring an additional endpoint named <code class=\"language-text\">/myendpoint</code> is given below.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@theia/core/shared/inversify'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> json <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'body-parser'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Application<span class=\"token punctuation\">,</span> Router <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@theia/core/shared/express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BackendApplicationContribution <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@theia/core/lib/node/backend-application'</span><span class=\"token punctuation\">;</span>\n\n@<span class=\"token function\">injectable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyCustomEndpoint</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BackendApplicationContribution</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token function\">configure</span><span class=\"token punctuation\">(</span>app<span class=\"token operator\">:</span> Application<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n       app<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/myendpoint'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">request<span class=\"token punctuation\">,</span> response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n           â€¦\n       <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>For more information on how to configure HTTP endpoints and handle events requests, please refer to the <a href=\"https://expressjs.com/en/4x/api.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Express API</a>.</p>","fields":{"slug":"backend_application_contribution"}}},"pageContext":{"slug":"backend_application_contribution"}}}