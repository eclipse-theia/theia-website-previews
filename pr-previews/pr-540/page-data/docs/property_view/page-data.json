{"componentChunkName":"component---src-templates-doc-js","path":"/docs/property_view","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Property View"},"html":"<h1 id=\"property-view\" style=\"position:relative;\"><a href=\"#property-view\" aria-label=\"property view permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Property View</h1>\n<p>Many IDEs, such as the traditional Eclipse IDE, have the notion of a global, extensible property view,\nwhich shows additional information about the current selection within the IDE.\nProperty views are heavily used in those IDEs for showing details of elements in e.g. diagram editors,\ncomplex tree editors, or the file explorer selection.\nTherefore, the main idea is to have a global, generic property view in the IDE,\nbut allow specific implementations to extend the contents of the global property view\nwith specific additional information for some type of selection.</p>\n<p>The <code class=\"language-text\">@theia/property-view extension</code> contributes a generic, global property view based on Theia's global selection.\nThe property view widget can be opened/toggled either via menu <code class=\"language-text\">View-&gt;Properties</code> or via shortcut <kbd>Shift</kbd>+<kbd>Alt</kbd>+<kbd>P</kbd>.\nIt is located in the bottom dock area by default.\nThe following two default content widgets are implemented in this extension:</p>\n<ul>\n<li><code class=\"language-text\">EmptyPropertyViewWidget</code>: If no other widget can be provided, a simple message (<code class=\"language-text\">No properties available</code>) is shown.</li>\n<li><code class=\"language-text\">ResourcePropertyViewWidget</code>: Displays additional information about a file (e.g. location, name, last modified) that is selected in the file explorer or in the active monaco editor.</li>\n</ul>\n<h2 id=\"contribute-a-custom-property-view\" style=\"position:relative;\"><a href=\"#contribute-a-custom-property-view\" aria-label=\"contribute a custom property view permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contribute a Custom Property View</h2>\n<p>To contribute a specific property view, it is necessary to implement a <code class=\"language-text\">PropertyViewDataService</code> which gathers the property data for a selection\nas well as a <code class=\"language-text\">PropertyViewWidgetProvider</code> which provides a suitable content widget to display the property data for a specific selection inside the property view widget.</p>\n<p>Here is a short example of how to implement an additional property view, which displays the name and whether it is a file or directory\nin a simple React widget based on the selection from the file explorer (assuming there would be no <code class=\"language-text\">ResourcePropertyViewWidget</code> of course):</p>\n<p>The <code class=\"language-text\">FileInfoPropertyDataService</code> gathers the file information and delivers a custom object:</p>\n<p><code class=\"language-text\">custom-data-service.ts</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">FileInfoPropertyObject</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    isDirectory<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n@<span class=\"token function\">injectable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FileInfoPropertyDataService</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">PropertyDataService</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">readonly</span> id <span class=\"token operator\">=</span> <span class=\"token string\">'fileinfo'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">readonly</span> label <span class=\"token operator\">=</span> <span class=\"token string\">'FileInfoPropertyDataService'</span><span class=\"token punctuation\">;</span>\n\n    @<span class=\"token function\">inject</span><span class=\"token punctuation\">(</span>LabelProvider<span class=\"token punctuation\">)</span> <span class=\"token keyword\">protected</span> <span class=\"token keyword\">readonly</span> labelProvider<span class=\"token operator\">:</span> LabelProvider<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">canHandleSelection</span><span class=\"token punctuation\">(</span>selection<span class=\"token operator\">:</span> Object <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">isFileSelection</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token function\">isFileSelection</span><span class=\"token punctuation\">(</span>selection<span class=\"token operator\">:</span> Object <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>selection <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin\">Array</span><span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> FileSelection<span class=\"token punctuation\">.</span><span class=\"token keyword\">is</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token function\">providePropertyData</span><span class=\"token punctuation\">(</span>selection<span class=\"token operator\">:</span> Object <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>FileInfoPropertyObject <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">isFileSelection</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin\">Array</span><span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n                name<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>labelProvider<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fileStat<span class=\"token punctuation\">.</span>resource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                isDirectory<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fileStat <span class=\"token keyword\">as</span> FileStat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>isDirectory\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The <code class=\"language-text\">FileInfoPropertyWidget</code> is a simple <code class=\"language-text\">ReactWidget</code> and displays the selected node and whether it is a file or directory:</p>\n<p><code class=\"language-text\">custom-content-widget.tsx</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FileInfoPropertyViewWidget</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ReactWidget</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">PropertyViewContentWidget</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">readonly</span> <span class=\"token constant\">ID</span> <span class=\"token operator\">=</span> <span class=\"token string\">'file-info-property-view'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">readonly</span> <span class=\"token constant\">LABEL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'File Information'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">protected</span> currentFileInfo<span class=\"token operator\">:</span> FileInfoPropertyObject<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> FileInfoPropertyViewWidget<span class=\"token punctuation\">.</span><span class=\"token constant\">ID</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">.</span>label <span class=\"token operator\">=</span> FileInfoPropertyViewWidget<span class=\"token punctuation\">.</span><span class=\"token constant\">LABEL</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">.</span>caption <span class=\"token operator\">=</span> FileInfoPropertyViewWidget<span class=\"token punctuation\">.</span><span class=\"token constant\">LABEL</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">.</span>closable <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>tabIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">updatePropertyViewContent</span><span class=\"token punctuation\">(</span>propertyDataService<span class=\"token operator\">?</span><span class=\"token operator\">:</span> PropertyDataService<span class=\"token punctuation\">,</span> selection<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Object <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>propertyDataService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            propertyDataService<span class=\"token punctuation\">.</span><span class=\"token function\">providePropertyData</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fileInfo<span class=\"token operator\">:</span> FileInfoPropertyObject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentFileInfo <span class=\"token operator\">=</span> fileInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span>ReactNode <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n            <span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Selected node in explorer: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentFileInfo<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentFileInfo<span class=\"token punctuation\">.</span>isDirectory <span class=\"token operator\">?</span> <span class=\"token string\">'(Directory)'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'(File)'</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The <code class=\"language-text\">FileInfoPropertyViewWidgetProvider</code> is responsible to provide the correct <code class=\"language-text\">PropertyViewContentWidget</code> based on the selection:</p>\n<p><code class=\"language-text\">custom-widget-provider.ts</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">@<span class=\"token function\">injectable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FileInfoPropertyViewWidgetProvider</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DefaultPropertyViewWidgetProvider</span> <span class=\"token punctuation\">{</span>\n\n    override <span class=\"token keyword\">readonly</span> id <span class=\"token operator\">=</span> <span class=\"token string\">'fileinfo'</span><span class=\"token punctuation\">;</span>\n    override <span class=\"token keyword\">readonly</span> label <span class=\"token operator\">=</span> <span class=\"token string\">'FileInfoPropertyViewWidgetProvider'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> fileInfoWidget<span class=\"token operator\">:</span> FileInfoPropertyViewWidget<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fileInfoWidget <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInfoPropertyViewWidget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    override <span class=\"token function\">canHandle</span><span class=\"token punctuation\">(</span>selection<span class=\"token operator\">:</span> Object <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">isFileSelection</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token function\">isFileSelection</span><span class=\"token punctuation\">(</span>selection<span class=\"token operator\">:</span> Object <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>selection <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin\">Array</span><span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> FileSelection<span class=\"token punctuation\">.</span><span class=\"token keyword\">is</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    override <span class=\"token function\">provideWidget</span><span class=\"token punctuation\">(</span>selection<span class=\"token operator\">:</span> Object <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>FileInfoPropertyViewWidget<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fileInfoWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    override <span class=\"token function\">updateContentWidget</span><span class=\"token punctuation\">(</span>selection<span class=\"token operator\">:</span> Object <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPropertyDataService</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">service</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fileInfoWidget<span class=\"token punctuation\">.</span><span class=\"token function\">updatePropertyViewContent</span><span class=\"token punctuation\">(</span>service<span class=\"token punctuation\">,</span> selection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the frontend module of the application the <code class=\"language-text\">FileInfoPropertyDataService</code> as well as the <code class=\"language-text\">FileInfoPropertyViewWidgetProvider</code> are registered as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>PropertyDataService<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>FileInfoPropertyDataService<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">inSingletonScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>PropertyViewWidgetProvider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span>FileInfoPropertyViewWidgetProvider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">inSingletonScope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Following these few steps should give the reader an idea on how to implement an own property view, consisting of a specific <code class=\"language-text\">PropertyViewWidgetProvider</code> and <code class=\"language-text\">PropertyViewDataService</code>.</p>\n<p>The resulting property view will be displayed like this:</p>\n<img src=\"../custom-property-view.gif\" alt=\"Property View - custom widget\" style=\"max-width: 690px\">","fields":{"slug":"property_view"}}},"pageContext":{"slug":"property_view"}}}