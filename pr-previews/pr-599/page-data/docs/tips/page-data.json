{"componentChunkName":"component---src-templates-doc-js","path":"/docs/tips","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Advanced Tips"},"html":"<h1 id=\"advanced-tips\" style=\"position:relative;\"><a href=\"#advanced-tips\" aria-label=\"advanced tips permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Advanced Tips</h1>\n<p>In this section we'll outline some advanced hints and tips to get the most out of developing tools based on Eclipse Theia.</p>\n<h2 id=\"providing-custom-api-to-vs-code-extensions-in-eclipse-theia\" style=\"position:relative;\"><a href=\"#providing-custom-api-to-vs-code-extensions-in-eclipse-theia\" aria-label=\"providing custom api to vs code extensions in eclipse theia permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Providing custom API to VS Code extensions in Eclipse Theia</h2>\n<p>Theia allows running VS Code extension by providing a compatible API (see <a href=\"/theia-website-previews/pr-previews/pr-599/docs/extensions/\">this overview</a> for details).\nIt is possible to extend this API to allow VS Code extensions running in Theia to access additional functionality compared to when they run within VS Code.\nThis allows you to provide a feature as a VS Code extension targeting VS Code and Theia. However, when running in Theia, the feature can be enhanced by using custom API only available in Theia.</p>\n<p>The following code example shows the usage custom API which is invoked only when running in a Theia-based application. This is determined via the application name.\nThe API is imported asynchronously to avoid runtime errors in VS Code.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vscode<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>appName <span class=\"token operator\">===</span> <span class=\"token constant\">MY_THEIA_APP_NAME</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Implement Theia API</span>\n    <span class=\"token keyword\">const</span> api <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@mytheiaextension/mycustomapi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// After importing the custom API, it can be used as any other API. The following lines are using an example API.</span>\n    api<span class=\"token punctuation\">.</span>host<span class=\"token punctuation\">.</span><span class=\"token function\">getMessageHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    api<span class=\"token punctuation\">.</span>host<span class=\"token punctuation\">.</span><span class=\"token function\">onRequestMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">actor<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> <span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span>actor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        api<span class=\"token punctuation\">.</span>host<span class=\"token punctuation\">.</span><span class=\"token function\">showMessage</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>An alternative to providing a custom API is to define custom commands. Again, these commands would only be available if the VS Code extension is running in Theia (see following code example).</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vscode<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>appName <span class=\"token operator\">===</span> <span class=\"token constant\">MY_THEIA_APP_NAME</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Execute Theia custom command</span>\n    <span class=\"token keyword\">const</span> commands <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> vscode<span class=\"token punctuation\">.</span>commands<span class=\"token punctuation\">.</span><span class=\"token function\">getCommands</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>commands<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">MY_THEIA_CUSTOM_COMMAND</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        vscode<span class=\"token punctuation\">.</span>commands<span class=\"token punctuation\">.</span><span class=\"token function\">executeCommand</span><span class=\"token punctuation\">(</span><span class=\"token constant\">MY_THEIA_CUSTOM_COMMAND</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>An example of this technique can be seen here:</p>\n<p><a href=\"https://github.com/thegecko/vscode-theia-extension\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/thegecko/vscode-theia-extension</a></p>","fields":{"slug":"tips"}}},"pageContext":{"slug":"tips"}}}